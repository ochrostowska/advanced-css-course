.btn {
  /** link is a pseudo class, link is a special state of a selector when */
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all 0.2s;
    border-radius: 10rem;
    position: relative;
    font-size: 1.6rem;

    //Changes for the <button> element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-0.343m);
    /* x, y, blur, color */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  /** defines a child of a btn class */
  &::after {
    content: ""; /* must be set or it won't appear */
    display: inline-block; /* must be set or it won't appear */
    height: 100%; /** match parent -> btn class */
    width: 100%; /** match parent -> btn class */
    border-radius: 10rem;
    position: absolute; /** relative to btn, we need to add relative to btn */
    top: 0;
    left: 0;
    z-index: -1; /** behind the main btn element */
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /** will apply the state for 0% state before animation starts */
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px 6px;
    font-size: 1.6rem;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    transform: translateY(-2px);
    /* x, y, blur, color */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    box-shadow: 0 0.5 rem 1 rem rgba($color-black, 0.15);
    transform: translateY(0);
  }
}
